#include <stdio.h>
#include <stdint.h>
#include "system.h"
#include "io.h"


#define SHA256_CONTROL_REG_OFFSET    (0x00000000 * 4)
#define SHA256_DATA_IN_REG_OFFSET    (0x00000001 * 4)
#define SHA256_STATUS_REG_OFFSET     (0x0000001A * 4)					//CHECK LAI DIA CHI
#define SHA256_HASH_OUT_0_OFFSET     (0x00000012 * 4)					//CHECK LAI DIA CHI


#define SHA256_CONTROL_START_BIT     0x00000001

int main() {

    const uint32_t input_block_abc[16] = {
        0x00000010, 0x00000011, 0x00000012, 0x00000013,
        0x00000014, 0x00000015, 0x00000016, 0x00000017,
        0x00000018, 0x00000019, 0x0000001A, 0x0000001B,
        0x0000001C, 0x0000001D, 0x0000001E, 0x0000001F
    };

    uint32_t status, control;

    uint32_t calculated_hash[8];

    printf("Nios II SHA-256 Test\n");
    printf("IP Base Address: 0x%08lx\n", (unsigned long)SHA_256_IP_0_BASE);

    //START IP
    IOWR_32DIRECT(SHA_256_IP_0_BASE, SHA256_CONTROL_REG_OFFSET, 0x00000000);	//Them dong nay
    IOWR_32DIRECT(SHA_256_IP_0_BASE, SHA256_CONTROL_REG_OFFSET, 0x00000001);

    //doc 2 thanh ghi control, status
    control = IORD_32DIRECT(SHA_256_IP_0_BASE, SHA256_CONTROL_REG_OFFSET);
    status = IORD_32DIRECT(SHA_256_IP_0_BASE, SHA256_STATUS_REG_OFFSET);

    //doc ket qua neu status la done
    printf("control: 0x%08lx\n", (unsigned long)control);
    printf("status:  0x%08lx\n", (unsigned long)status);

    //nap 16 word
    int i = 0;
    for (i = 0; i < 16; i++) {
          IOWR_32DIRECT(SHA_256_IP_0_BASE, SHA256_DATA_IN_REG_OFFSET + (i * 4), input_block_abc[i]); //Chua cong ofset i vao
      }

    IOWR_32DIRECT(SHA_256_IP_0_BASE, SHA256_CONTROL_REG_OFFSET, 0x00000000);	//Them dong nay

    printf("Nap xong 16 word.\n");

    while (1) {
    	status = IORD_32DIRECT(SHA_256_IP_0_BASE, SHA256_STATUS_REG_OFFSET);
    	if (status == 0x00000001) {
    		printf("IP da tinh xong, DONE = 1");
    		break;
    	}
    }

    //print ket qua
    printf("\n--- Test 1 ---\n");

    i = 0;
    for (i = 0; i < 8; i++) {
		calculated_hash[i] = IORD_32DIRECT(SHA_256_IP_0_BASE, SHA256_HASH_OUT_0_OFFSET + (i * 4));
	}

    printf("Ket qua hash: ");

	for (i = 0; i < 8; i++) {
		printf("%08lx", (unsigned long)calculated_hash[i]);
	}
	printf("\n");


    printf("\nXong test.\n");
    return 0;
}
